/*
 *
 * www.jinvovo.com Inc
 * Copyright (c) 2017 All Rights Reserved.
 *
 */
package com.jvv.openapi.dal.mapper;

//import org.springframework.stereotype.Repository;
//import org.springframework.transaction.annotation.Transactional;

import org.apache.ibatis.annotations.Param;

import com.jvv.openapi.dal.entity.OrderInfoDO;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>order_info</tt>.
 *
 * This file is generated by <tt>iwallet-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>iwallet</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/order_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>iwallet-dalgen</tt> 
 * to generate this file.
 *
 * @author Cheng Li
 * @author Turalyon
 */
 @SuppressWarnings("rawtypes")
public interface OrderInfoMapper {
	/**
	 *  Insert one <tt>OrderInfoDO</tt> object to DB table <tt>order_info</tt>, return primary key
	 *
	 * 插入数据
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into order_info(id,gid,serial_no,service_name,service_version,partner_id,status,trade_date,merchant_order_no,request_params,result_code,result_message,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param orderInfo
	 *	@return int
	 */	 

    public int insert( @Param("orderInfo")OrderInfoDO orderInfo);

	/**
	 *  Query DB table <tt>order_info</tt> for records.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from order_info</tt>
	 *
	 *	@param orderInfo
	 *	@param start
	 *	@param pageSize
	 *	@return List<OrderInfoDO>
	 */	 

    public List<OrderInfoDO> query( @Param("orderInfo")OrderInfoDO orderInfo,  @Param("start")long start,  @Param("pageSize")int pageSize);

	/**
	 *  Query DB table <tt>order_info</tt> for records.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from order_info</tt>
	 *
	 *	@param orderInfo
	 *	@return long
	 */	 

    public long queryCount( @Param("orderInfo")OrderInfoDO orderInfo);

	/**
	 *  Update DB table <tt>order_info</tt>.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update order_info set status=? where (id = ?)</tt>
	 *
	 *	@param orderInfo
	 *	@return int
	 */	 

    public int update( @Param("orderInfo")OrderInfoDO orderInfo);

	/**
	 *  Delete records from DB table <tt>order_info</tt>.
	 *
	 * 根据主键删除数据
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from order_info where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 */	 

    public int delete( @Param("id")Long id);

	/**
	 *  Query DB table <tt>order_info</tt> for records.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from order_info orderInfo where (merchant_order_no = ?)</tt>
	 *
	 *	@param merchantOrderNo
	 *	@return OrderInfoDO
	 */	 

    public OrderInfoDO findByMerchantOrderNo( @Param("merchantOrderNo")String merchantOrderNo);

	/**
	 *  Update DB table <tt>order_info</tt>.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update order_info set gid=? where (id = ?)</tt>
	 *
	 *	@param orderInfo
	 *	@return int
	 */	 

    public int updateByMerchantOrderNo( @Param("orderInfo")OrderInfoDO orderInfo);

	/**
	 *  Delete records from DB table <tt>order_info</tt>.
	 *
	 * 根据主键删除数据
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from order_info where (merchant_order_no = ?)</tt>
	 *
	 *	@param merchantOrderNo
	 *	@return int
	 */	 

    public int deleteByMerchantOrderNo( @Param("merchantOrderNo")String merchantOrderNo);

	/**
	 *  Query DB table <tt>order_info</tt> for records.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from order_info</tt>
	 *
	 *	@param merchantOrderNoList
	 *	@return List<OrderInfoDO>
	 */	 

    public List<OrderInfoDO> findByMerchantOrderNoIn( @Param("merchantOrderNoList")List merchantOrderNoList);

	/**
	 *  Query DB table <tt>order_info</tt> for records.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from order_info orderInfo where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return OrderInfoDO
	 */	 

    public OrderInfoDO findById( @Param("id")Long id);

	/**
	 *  Query DB table <tt>order_info</tt> for records.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from order_info</tt>
	 *
	 *	@param idList
	 *	@return List<OrderInfoDO>
	 */	 

    public List<OrderInfoDO> findByIdIn( @Param("idList")List idList);

	/**
	 *  Query DB table <tt>order_info</tt> for records.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from order_info orderInfo where (serial_no = ?)</tt>
	 *
	 *	@param serialNo
	 *	@return OrderInfoDO
	 */	 

    public OrderInfoDO findBySerialNo( @Param("serialNo")String serialNo);

	/**
	 *  Update DB table <tt>order_info</tt>.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update order_info set gid=? where (id = ?)</tt>
	 *
	 *	@param orderInfo
	 *	@return int
	 */	 

    public int updateBySerialNo( @Param("orderInfo")OrderInfoDO orderInfo);

	/**
	 *  Delete records from DB table <tt>order_info</tt>.
	 *
	 * 根据主键删除数据
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from order_info where (serial_no = ?)</tt>
	 *
	 *	@param serialNo
	 *	@return int
	 */	 

    public int deleteBySerialNo( @Param("serialNo")String serialNo);

	/**
	 *  Query DB table <tt>order_info</tt> for records.
	 *
	 * 
     * <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from order_info</tt>
	 *
	 *	@param serialNoList
	 *	@return List<OrderInfoDO>
	 */	 

    public List<OrderInfoDO> findBySerialNoIn( @Param("serialNoList")List serialNoList);

}
