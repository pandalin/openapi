<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ==========================================================  -->
<!-- Configuration for MyBatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>iwallet-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>iwallet</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>iwallet-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author zhyang                                                                -->
<!-- ============================================================================= -->

<!-- ==========================================================  -->
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的 -->
<!-- 例如namespace="com.jvv.openapi.dal.mapper.OrderInfoMapper"就是com.jvv.openapi.dal.mapper(包名)+ OrderInfoMapper( OrderInfoMapperMapper.xml文件去除-mapping.xml) -->
<!-- ==========================================================  -->
<mapper namespace="com.jvv.openapi.dal.mapper.OrderInfoMapper">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->
    <!-- result maps for database table order_info -->
    <resultMap id="orderInfoDO" type="com.jvv.openapi.dal.entity.OrderInfoDO">
        <id  property="id" column="id" javaType="java.lang.Long" jdbcType="INTEGER"/>
        <result  property="gid" column="gid" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="serialNo" column="serial_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="serviceName" column="service_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="serviceVersion" column="service_version" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="partnerId" column="partner_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="status" column="status" javaType="com.jvv.openapi.facade.constants.enums.Status" jdbcType="VARCHAR" typeHandler="com.jvv.openapi.dal.handler.StatusTypeHandler"/>
        <result  property="tradeDate" column="trade_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result  property="merchantOrderNo" column="merchant_order_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="requestParams" column="request_params" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="resultCode" column="result_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="resultMessage" column="result_message" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result  property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="orderInfoDO_Columns">
        orderInfo.id,
        orderInfo.gid,
        orderInfo.serial_no,
        orderInfo.service_name,
        orderInfo.service_version,
        orderInfo.partner_id,
        orderInfo.status,
        orderInfo.trade_date,
        orderInfo.merchant_order_no,
        orderInfo.request_params,
        orderInfo.result_code,
        orderInfo.result_message,
        orderInfo.raw_add_time,
        orderInfo.raw_update_time
    </sql>
    <!-- ============================================= -->
    <!-- mapped statements for OrderInfoMapper -->
    <!-- ============================================= -->

    <!-- mapped statement for OrderInfoMapper.insert -->
    <insert id="insert">
        <selectKey order="AFTER" resultType="java.lang.Long" keyProperty="orderInfo.id">
            SELECT LAST_INSERT_ID() 
        </selectKey>
        INSERT INTO order_info
        (
            gid,
            serial_no,
            service_name,
            service_version,
            partner_id,
            status,
            trade_date,
            merchant_order_no,
            request_params,
            result_code,
            result_message,
            raw_add_time
        )VALUES(
            #{orderInfo.gid,jdbcType=VARCHAR},
            #{orderInfo.serialNo,jdbcType=VARCHAR},
            #{orderInfo.serviceName,jdbcType=VARCHAR},
            #{orderInfo.serviceVersion,jdbcType=VARCHAR},
            #{orderInfo.partnerId,jdbcType=VARCHAR},
            #{orderInfo.status,jdbcType=VARCHAR,javaType=com.jvv.openapi.facade.constants.enums.Status,typeHandler=com.jvv.openapi.dal.handler.StatusTypeHandler},
            #{orderInfo.tradeDate,jdbcType=TIMESTAMP,javaType=java.util.Date},
            #{orderInfo.merchantOrderNo,jdbcType=VARCHAR},
            #{orderInfo.requestParams,jdbcType=VARCHAR},
            #{orderInfo.resultCode,jdbcType=VARCHAR},
            #{orderInfo.resultMessage,jdbcType=VARCHAR},
            SYSDATE()
        )
    </insert>


    <!-- mapped statement for OrderInfoMapper.query -->
    <select id="query" resultMap="orderInfoDO">
                        SELECT 
                    <include refid="orderInfoDO_Columns"/>
                FROM order_info orderInfo
                <where>
                    <if test="orderInfo.id!=null " >
                        AND id = #{orderInfo.id,jdbcType=INTEGER,javaType=java.lang.Long} 
                    </if>
                    <if test="orderInfo.gid!=null  and orderInfo.gid!='' " >
                        AND gid = #{orderInfo.gid,jdbcType=VARCHAR} 
                    </if>
                    <if test="orderInfo.serialNo!=null  and orderInfo.serialNo!='' " >
                        AND serial_no = #{orderInfo.serialNo,jdbcType=VARCHAR} 
                    </if>
                    <if test="orderInfo.serviceName!=null  and orderInfo.serviceName!='' " >
                        AND service_name = #{orderInfo.serviceName,jdbcType=VARCHAR} 
                    </if>
                    <if test="orderInfo.serviceVersion!=null  and orderInfo.serviceVersion!='' " >
                        AND service_version = #{orderInfo.serviceVersion,jdbcType=VARCHAR} 
                    </if>
                    <if test="orderInfo.partnerId!=null  and orderInfo.partnerId!='' " >
                        AND partner_id = #{orderInfo.partnerId,jdbcType=VARCHAR} 
                    </if>
                    <if test="orderInfo.status!=null " >
                        AND status = #{orderInfo.status,jdbcType=VARCHAR,javaType=com.jvv.openapi.facade.constants.enums.Status,typeHandler=com.jvv.openapi.dal.handler.StatusTypeHandler} 
                    </if>
                    <if test="orderInfo.tradeDate!=null " >
                        AND trade_date = #{orderInfo.tradeDate,jdbcType=TIMESTAMP,javaType=java.util.Date} 
                    </if>
                    <if test="orderInfo.merchantOrderNo!=null  and orderInfo.merchantOrderNo!='' " >
                        AND merchant_order_no = #{orderInfo.merchantOrderNo,jdbcType=VARCHAR} 
                    </if>
                    <if test="orderInfo.resultCode!=null  and orderInfo.resultCode!='' " >
                        AND result_code = #{orderInfo.resultCode,jdbcType=VARCHAR} 
                    </if>
                </where>
                ORDER BY id DESC 
        LIMIT #{start},#{pageSize}
    </select>
            
    <!-- mapped statement for OrderInfoMapper.queryCount -->
    <select id="queryCount" resultType="long">
        SELECT COUNT(id) 
        FROM order_info orderInfo
        <where>
            <if test="orderInfo.id!=null " >
                AND id = #{orderInfo.id,jdbcType=INTEGER,javaType=java.lang.Long} 
            </if>
            <if test="orderInfo.gid!=null  and orderInfo.gid!='' " >
                AND gid = #{orderInfo.gid,jdbcType=VARCHAR} 
            </if>
            <if test="orderInfo.serialNo!=null  and orderInfo.serialNo!='' " >
                AND serial_no = #{orderInfo.serialNo,jdbcType=VARCHAR} 
            </if>
            <if test="orderInfo.serviceName!=null  and orderInfo.serviceName!='' " >
                AND service_name = #{orderInfo.serviceName,jdbcType=VARCHAR} 
            </if>
            <if test="orderInfo.serviceVersion!=null  and orderInfo.serviceVersion!='' " >
                AND service_version = #{orderInfo.serviceVersion,jdbcType=VARCHAR} 
            </if>
            <if test="orderInfo.partnerId!=null  and orderInfo.partnerId!='' " >
                AND partner_id = #{orderInfo.partnerId,jdbcType=VARCHAR} 
            </if>
            <if test="orderInfo.status!=null " >
                AND status = #{orderInfo.status,jdbcType=VARCHAR,javaType=com.jvv.openapi.facade.constants.enums.Status,typeHandler=com.jvv.openapi.dal.handler.StatusTypeHandler} 
            </if>
            <if test="orderInfo.tradeDate!=null " >
                AND trade_date = #{orderInfo.tradeDate,jdbcType=TIMESTAMP,javaType=java.util.Date} 
            </if>
            <if test="orderInfo.merchantOrderNo!=null  and orderInfo.merchantOrderNo!='' " >
                AND merchant_order_no = #{orderInfo.merchantOrderNo,jdbcType=VARCHAR} 
            </if>
            <if test="orderInfo.resultCode!=null  and orderInfo.resultCode!='' " >
                AND result_code = #{orderInfo.resultCode,jdbcType=VARCHAR} 
            </if>
        </where>

    </select>
            
    <!-- mapped statement for OrderInfoMapper.update -->
    <update id="update">
        UPDATE order_info
        <set>
            raw_update_time = CURRENT_TIMESTAMP(),
            <if test="orderInfo.status!=null " >
                status = #{orderInfo.status,jdbcType=VARCHAR,javaType=com.jvv.openapi.facade.constants.enums.Status,typeHandler=com.jvv.openapi.dal.handler.StatusTypeHandler} ,
            </if>
            <if test="orderInfo.tradeDate!=null " >
                trade_date = #{orderInfo.tradeDate,jdbcType=TIMESTAMP,javaType=java.util.Date} ,
            </if>
            <if test="orderInfo.merchantOrderNo!=null  and orderInfo.merchantOrderNo!='' " >
                merchant_order_no = #{orderInfo.merchantOrderNo,jdbcType=VARCHAR} ,
            </if>
            <if test="orderInfo.resultCode!=null  and orderInfo.resultCode!='' " >
                result_code = #{orderInfo.resultCode,jdbcType=VARCHAR} ,
            </if>
            <if test="orderInfo.resultMessage!=null  and orderInfo.resultMessage!='' " >
                result_message = #{orderInfo.resultMessage,jdbcType=VARCHAR} ,
            </if>
        </set>
        WHERE 
            id = #{orderInfo.id,jdbcType=INTEGER,javaType=java.lang.Long}

    </update>

    <!-- mapped statement for OrderInfoMapper.delete -->
    <delete id="delete">
        <![CDATA[
        delete from order_info where (id = #{id, jdbcType=INTEGER})
        ]]>
    </delete>

    <!-- mapped statement for OrderInfoMapper.findByMerchantOrderNo -->
    <select id="findByMerchantOrderNo" resultMap="orderInfoDO">
        SELECT 
        <include refid="orderInfoDO_Columns"/>
        FROM order_info orderInfo
        WHERE 
            merchant_order_no = #{merchantOrderNo,jdbcType=VARCHAR}

    </select>
            
    <!-- mapped statement for OrderInfoMapper.updateByMerchantOrderNo -->
    <update id="updateByMerchantOrderNo">
        UPDATE order_info
        <set>
            <if test="orderInfo.status!=null " >
                status = #{orderInfo.status,jdbcType=VARCHAR,javaType=com.jvv.openapi.facade.constants.enums.Status,typeHandler=com.jvv.openapi.dal.handler.StatusTypeHandler} ,
            </if>
            <if test="orderInfo.tradeDate!=null " >
                trade_date = #{orderInfo.tradeDate,jdbcType=TIMESTAMP,javaType=java.util.Date} ,
            </if>
            <if test="orderInfo.resultCode!=null  and orderInfo.resultCode!='' " >
                result_code = #{orderInfo.resultCode,jdbcType=VARCHAR} ,
            </if>
            <if test="orderInfo.resultMessage!=null  and orderInfo.resultMessage!='' " >
                result_message = #{orderInfo.resultMessage,jdbcType=VARCHAR} ,
            </if>
        </set>
        WHERE 
            merchant_order_no = #{orderInfo.merchantOrderNo,jdbcType=VARCHAR}

    </update>

    <!-- mapped statement for OrderInfoMapper.deleteByMerchantOrderNo -->
    <delete id="deleteByMerchantOrderNo">
        <![CDATA[
        delete from order_info where (merchant_order_no = #{merchantOrderNo, jdbcType=VARCHAR})
        ]]>
    </delete>

    <!-- mapped statement for OrderInfoMapper.findByMerchantOrderNoIn -->
    <select id="findByMerchantOrderNoIn" resultMap="orderInfoDO">
        SELECT 
        <include refid="orderInfoDO_Columns"/>
        FROM order_info orderInfo
        WHERE 
            merchant_order_no IN 
             <foreach collection="merchantOrderNoList" item="item"  open="(" separator="," close=")"> 
                 #{item} 
             </foreach> 

    </select>
            
    <!-- mapped statement for OrderInfoMapper.findById -->
    <select id="findById" resultMap="orderInfoDO">
        SELECT 
        <include refid="orderInfoDO_Columns"/>
        FROM order_info orderInfo
        WHERE 
            id = #{id,jdbcType=INTEGER,javaType=java.lang.Long}

    </select>
            
    <!-- mapped statement for OrderInfoMapper.findByIdIn -->
    <select id="findByIdIn" resultMap="orderInfoDO">
        SELECT 
        <include refid="orderInfoDO_Columns"/>
        FROM order_info orderInfo
        WHERE 
            id IN 
             <foreach collection="idList" item="item"  open="(" separator="," close=")"> 
                 #{item} 
             </foreach> 

    </select>
            
    <!-- mapped statement for OrderInfoMapper.findBySerialNo -->
    <select id="findBySerialNo" resultMap="orderInfoDO">
        SELECT 
        <include refid="orderInfoDO_Columns"/>
        FROM order_info orderInfo
        WHERE 
            serial_no = #{serialNo,jdbcType=VARCHAR}

    </select>
            
    <!-- mapped statement for OrderInfoMapper.updateBySerialNo -->
    <update id="updateBySerialNo">
        UPDATE order_info
        <set>
            <if test="orderInfo.status!=null " >
                status = #{orderInfo.status,jdbcType=VARCHAR,javaType=com.jvv.openapi.facade.constants.enums.Status,typeHandler=com.jvv.openapi.dal.handler.StatusTypeHandler} ,
            </if>
            <if test="orderInfo.tradeDate!=null " >
                trade_date = #{orderInfo.tradeDate,jdbcType=TIMESTAMP,javaType=java.util.Date} ,
            </if>
            <if test="orderInfo.merchantOrderNo!=null  and orderInfo.merchantOrderNo!='' " >
                merchant_order_no = #{orderInfo.merchantOrderNo,jdbcType=VARCHAR} ,
            </if>
            <if test="orderInfo.resultCode!=null  and orderInfo.resultCode!='' " >
                result_code = #{orderInfo.resultCode,jdbcType=VARCHAR} ,
            </if>
            <if test="orderInfo.resultMessage!=null  and orderInfo.resultMessage!='' " >
                result_message = #{orderInfo.resultMessage,jdbcType=VARCHAR} ,
            </if>
        </set>
        WHERE 
            serial_no = #{orderInfo.serialNo,jdbcType=VARCHAR}

    </update>

    <!-- mapped statement for OrderInfoMapper.deleteBySerialNo -->
    <delete id="deleteBySerialNo">
        <![CDATA[
        delete from order_info where (serial_no = #{serialNo, jdbcType=VARCHAR})
        ]]>
    </delete>

    <!-- mapped statement for OrderInfoMapper.findBySerialNoIn -->
    <select id="findBySerialNoIn" resultMap="orderInfoDO">
        SELECT 
        <include refid="orderInfoDO_Columns"/>
        FROM order_info orderInfo
        WHERE 
            serial_no IN 
             <foreach collection="serialNoList" item="item"  open="(" separator="," close=")"> 
                 #{item} 
             </foreach> 

    </select>
            
</mapper>
